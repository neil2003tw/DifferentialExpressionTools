predict(fit,vowel.test)
confusionMatrix(predict(fit,vowel.test),vowel.test$y)
confusionMatrix(predict(fit,vowel.test),vowel.test$y)
length(vowel.test)
dim(vowel.test)
vowel.test$y
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
ll
vowel.train$y<-factor(vowel.train$y)
fit<-train(y~.,data = vowel.train)
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
vowel.test$y<-factor(vowel.test$y)
set.seed(33833)
fit<-train(y~.,data = vowel.train)
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
library(AppliedPredictiveModeling)
data(concrete)
?concrete
getwd()
read.table('/Users/NeilWu/Desktop/GSE31827de')
temp<-read.table('/Users/NeilWu/Desktop/GSE31827de')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='/t')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='\t')
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='\t')
head(ref)
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=';')
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=';',fill=T)
head(ref)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='NONO',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='NO',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='*',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=' ',fill=T)
head(ref)
sapply(head(ref),function(x) grepl(x,'gene_id'))
sapply(head(ref,4),function(x) grepl(x,'gene_id'))
sapply(head(ref,4),function(x) grepl('.*gene_id.*',x))
sapply(head(ref,4),function(x) x[grepl('.*gene_id.*',x)])
sapply(head(ref,4),function(x) x[grepl('.*gene_id.*',as.character(x))])
sapply(head(ref,4),function(x) grepl('.*gene_id.*',as.character(x)))
t<-sapply(head(ref,4),function(x) grepl('.*gene_id.*',as.character(x)))
head(ref,4)
head(ref,4)[t]
gene_id<-sapply(ref,function(x) grepl('.*gene_id.*',as.character(x)))
gene_name<-sapply(ref,function(x) grepl('.*gene_name.*',as.character(x)))
head(ref[gene_id])
head(ref[gene_name])
data.frame(gene_id=ref[gene_id],gene_name=ref[gene_name])
data<-data.frame(gene_id=ref[gene_id],gene_name=ref[gene_name])
head(data)
temp_id<-strsplit(ref[gene_id],' ')
head(temp_id)
temp_name<-strsplit(ref[gene_name],' ')
sapply(head(temp_id)),[2])
sapply(head(temp_id)),[[2])
sapply(head(temp_id)),[[2)
sapply(head(temp_id)),[[)
sapply(head(temp_id),[2])
sapply(head(temp_id),[2)
sapply(head(temp_id),[[])
sapply(head(temp_id),function(x) x[2])
temp_id_done<-sapply(temp_id,function(x) x[2])
temp_name_done<-sapply(temp_name,function(x) x[2])
head(temp_id_done)
head(temp_name_done)
temp_name<-strsplit(ref[gene_name],' ')
head(temp_name)
temp_name_done<-sapply(temp_name,function(x) x[3])
data<-data.frame(gene_id=temp_id_done,gene_name=temp_name_done)
head(data)
write.csv(data,'/Users/NeilWu/Desktop/Mouse_id_name.csv')
clear(gene_id)
clean(gene_id)
rm(gene_id)
rm(gene_name)
head(temp)
head(temp,20)
strsplit(temp,'_at')
strsplit(temp[1],'_at')
as.character(temp)
temp[1]
read.csv('/Users/NeilWu/Desktop/GSE31827de')
read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ')
temp<-read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ')
head(temp)
sapply(temp,function(x) strsplit(x,'_')[1])
sapply(temp,function(x) strsplit(x,'\_')[1])
sapply(temp,function(x) strsplit(x,'_at')[1])
temp<-read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ',stringasfactor=F)
sapply(temp,function(x) strsplit(as.character(x),'_at')[1])
sapply(temp,function(x) strsplit(as.character(x),'_at'))
temp2<-sapply(temp,function(x) strsplit(as.character(x),'_at'))
head(temp2)
data.frame(temp2)
temp<-data.frame(temp2)
head(temp)
head(data)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
merge(x=temp,y = data,by.x =x,by.y=gene_id)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
typeof(data)
typeof(temp)
str(data)
str(temp)
temp$x
head(temp)
unlist(temp$x)
temp<-unlist(temp$x)
temp<-data.frame(temp)
str(temp)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
head(temp)
merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
merged<-merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
head(merged)
head(merged,10)
head(temp)
head(data)
length(data)
length(data$gene_id)
data[data$gene_id == 'ENSMUSG00000000154',]
duplicated(data)
sum(duplicated(data))
data[duplicated(data)]
data[duplicated(data),]
head(data[duplicated(data),])
head(data[duplicated(data),],40)
head(data[duplicated(data),],80)
data<-data[!duplicated(data),]
merged<-merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
head(merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
FN2<-read.csv('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
head(FN2)
library(xlsx)
??read.xls
library(gdata)
read.xls('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
FN2<-read.xls('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
head(FN2)
FN2_gn<-FN2$gene_name
head(FN2_gn)
head(temp2)
head(merged)
match(tolower(merged$gene_name),tolower(as.character(FN2_gn)))
!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))
match(tolower(merged$gene_name),tolower(as.character(FN2_gn)))
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt')
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F,colnames=F)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F,col.names=F)
FN2<-read.xls('/Users/NeilWu/Dropbox/2-fold change (M4 over CTN).xls')
head(FN2)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
head(FN2_found)
length(FN2_found)
write.table(FN2_found,'/Users/NeilWu/Desktop/M4_over_match.txt',row.names=F,quote=F,col.names=F)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt')
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T)
head(FN2)
FN2<-read.csv('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T,header=T)
head(FN2)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
haed(FN2_found)
head(FN2_found)
length(FN2_found)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match_fold8.txt',row.names=F,quote=F,col.names=F)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (M4 over CTN).txt',fill=T,header=T)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
write.table(FN2_found,'/Users/NeilWu/Desktop/M4_over_match_fold8.txt',row.names=F,quote=F,col.names=F)
?suppressPackageStartupMessages
suppressPackageStartupMessages
t<-c('a','a','b','c')
grepl('a',t)
grep('a',t)
t[grep('a',t)]
datafilename="http://personality-project.org/r/datasets/R.appendix1.data"
> data.ex1=read.table(datafilename,header=T)
data.ex1=read.table(datafilename,header=T)
head(data.ex1)
str(data.ex1)
data.ex1
barplot(data.ex1$Alertness)
?t
rand(1,13)
randn(1,13)
?perm
??perm
?sample
sample(seq(1,13),13)
setwd('../AML_lncRNA/AML/Expression-Genes/WUSM__HG-U133_Plus_2/')
head(read.table('Merged_table.txt'))
head(read.table('Merged_table.txt',sep='\t'))
x<-read.table('lncRNA_rm_duplicate.txt',sep='\t')
head(x)
library(survival)
Surv
?coxph
?Surv
read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt')
read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t')
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t')
head(clinical)
head(clinical[,1])
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T)
head(clinical[,1])
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T)
head(clinical)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=1)
head(clinical)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=2)
head(clinical[,1])
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=2,stringsAsFactors = F)
str(clinical)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=1,stringsAsFactors = F)
str(clinical)
clinical<-clinical[-1,]
str(clinical)
colnames(clinical)
clinical<-clinical[,c(1,3,4,5,6,17,18,52)]
str(clinical)
head(x)
colnames(x)
clinical[1,]
clinical[,1]
substr
substr(colnames(x),9,13)
substr(colnames(x),9,12)
colnames(x)<-substr(colnames(x),9,12)
clinical[,1]
substr(9,12,clinical[,1])
substr(clinical[,1],9,12)
clinical[,1]<-substr(clinical[,1],9,12)
clinical[,1] %in% colnames(x)
colnames(x) %in% clinical[,1]
which(colnames(x) %in% clinical[,1])
which(clinical[,1] %in% colnames(x))
which(colnames(x) %in% clinical[,1])
t(clinical[which(colnames(x) %in% clinical[,1]),])
rbind(t(clinical[which(colnames(x) %in% clinical[,1]),]),x)
rbind(t(clinical[which(colnames(x) %in% clinical[,1]),]),x)
head(x)
clinical_ed<-t(clinical[which(colnames(x) %in% clinical[,1]),])
colnames(clinical)<-clinical[1,]
colnames(clinical_ed)<-clinical_ed[1,]
lncRNA_with_clinical<-rbind(clinical_ed[-1,],x)
head(clinical_ed)
head(x)
head(clinical_ed)
str(clinical_ed)
colnames(clinical_ed)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=2,stringsAsFactors = F)
clinical<-clinical[-1,c(1,3,4,5,6,17,18,52)]
clinical[,1]<-substr(clinical[,1],9,12)
clinical[1,]
clinical[,1]
which(colnames(x) %in% clinical[,1])
length(which(colnames(x) %in% clinical[,1]))
length(which(clinical[,1] %in% colnames(x)))
which(clinical[,1] %in% colnames(x))
colnames(x)
clinical[,1][-1]
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=2,stringsAsFactors = F)
clinical<-clinical[,c(1,3,4,5,6,17,18,52)]
colnames(count_filtered)<-substr(colnames(count_filtered),9,12)
clinical[,1]<-substr(clinical[,1],9,12)
colnames(x)
clinical[,1]
which(clinical[,1] %in% colnames(x))
clinical[which(clinical[,1] %in% colnames(x)),1]
clinical[which(clinical[,1] %in% colnames(x)),1]==colnames(x)
sum(clinical[which(clinical[,1] %in% colnames(x)),1]==colnames(x))
clinical_ed<-data.frame(t(clinical[which(clinical[,1] %in% colnames(x)),]))
head(clinical_ed)
clinical<-read.table('../../Clinical/Biotab/nationwidechildrens.org_clinical_patient_laml.txt',sep='\t',header=T,skip=1,stringsAsFactors = F)
clinical<-clinical[-1,c(1,3,4,5,6,17,18,52)]
colnames(count_filtered)<-substr(colnames(count_filtered),9,12)
clinical[,1]<-substr(clinical[,1],9,12)
clinical_ed<-data.frame(t(clinical[which(clinical[,1] %in% colnames(x)),]))
head(clinical_ed)
colnames(clinical_ed)<-clinical_ed[1,]
lncRNA_with_clinical<-rbind(clinical_ed[-1,],x)
colnames(x)
colnames(clinical_ed)
head(clinical_ed)
clinical_ed[1,]
unlist(clinical_ed[1,])
clinical_ed[1,]
clinical_ed[1,][2]
clinical_ed[1,][,2]
clinical_ed[1,][2,]
clinical_ed[1,]
value(clinical_ed[1,])
sapply(clinical_ed[1,], function(x){as.numeric(x[2])})
sapply(clinical_ed[1,], function(x){as.numeric(x)})
sapply(clinical_ed[1,], function(x){as.numeric(x[1])})
sapply(clinical_ed[1,], function(x){as.numeric(x)})
typeof(clinical_ed[1,])
unlist(clinical_ed[1,])
colnames(clinical_ed)<-unlist(clinical_ed[1,])
head(clinical_ed)
lncRNA_with_clinical<-rbind(clinical_ed[-1,],x)
warnings()
head(lncRNA_with_clinical)
warnings()
str(x)
t(x)
typeof(t(x))
data.frame(t(x))
clinical_ed<-data.frame(t(clinical[which(clinical[,1] %in% colnames(x)),]))
clinical_ed<-data.frame(clinical[which(clinical[,1] %in% colnames(x)),])
head(clinical_ed)
lncRNA_with_clinical<-cbind(clinical_ed,data.frame(t(x)))
head(lncRNA_with_clinical)
str(lncRNA_with_clinical)
rownames(x)
rownames(data.frame(t(x)))
lncRNA_with_clinical$cytogenetic_abnormality
grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T)
colnames(lncRNA_with_clinical)
CNlncRNA_date<-lncRNA_with_clinical[grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T),-c(1,2,3,4,5,8)]
colnames(CNlncRNA_date)
?Surv
with(lung, Surv(time, status))
Surv(heart$start, heart$stop, heart$event)
heart
CNlncRNA_date
colnames(CNlncRNA_date)
dat.CNlnc.surv<-lncRNA_with_clinical[grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T),-c(1,2,3,4,5,8)]
dim(dat.CNlnc.surv)[2]
3:dim(dat.CNlnc.surv)[2]
cox.p <- vector()
for( i in 3:dim(dat.CNlnc.surv)[2]){
cox.p[i] <- summary(coxph(Surv(time = days_to_death, event = days_to_last_followup) ~ dat.CNlnc.surv[,i], data = dat.adc))$coefficient[5]
print(i/dim(dat.CNlnc.surv)[2])
}
for( i in 3:dim(dat.CNlnc.surv)[2]){
cox.p[i] <- summary(coxph(Surv(time = days_to_death, event = days_to_last_followup) ~ dat.CNlnc.surv[,i], data = dat.CNlnc.surv))$coefficient[5]
print(i/dim(dat.CNlnc.surv)[2])
}
dat.CNlnc.surv$days_to_last_followup
as.numeric(dat.CNlnc.surv$days_to_last_followup)
dat.CNlnc.surv<-as.numeric(lncRNA_with_clinical[grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T),-c(1,2,3,4,5,8)])
dat.CNlnc.surv<-lncRNA_with_clinical[grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T),-c(1,2,3,4,5,8)]
dat.CNlnc.surv$days_to_last_followup<-as.numeric(dat.CNlnc.surv$days_to_last_followup)
dat.CNlnc.surv$days_to_death<-as.numeric(dat.CNlnc.surv$days_to_death)
for( i in 3:dim(dat.CNlnc.surv)[2]){
cox.p[i] <- summary(coxph(Surv(time = days_to_death, event = days_to_last_followup) ~ dat.CNlnc.surv[,i], data = dat.CNlnc.surv))$coefficient[5]
print(i/dim(dat.CNlnc.surv)[2])
}
is.na(dat.CNlnc.surv$days_to_last_followup)
dat.CNlnc.surv$days_to_last_followup[is.na(dat.CNlnc.surv$days_to_last_followup)]<-dat.CNlnc.surv$days_to_death[is.na(dat.CNlnc.surv$days_to_last_followup)]
dat.CNlnc.surv$days_to_last_followup
dat.CNlnc.surv<-lncRNA_with_clinical[grepl('normal',lncRNA_with_clinical$cytogenetic_abnormality,ignore.case = T),-c(1,2,3,4,5,8)]
dat.CNlnc.surv$days_to_last_followup
dat.CNlnc.surv$days_to_last_followup<-as.numeric(dat.CNlnc.surv$days_to_last_followup)
dat.CNlnc.surv$days_to_death<-as.numeric(dat.CNlnc.surv$days_to_death)
dat.CNlnc.surv$days_to_last_followup
dat.CNlnc.surv$days_to_death
is.na(dat.CNlnc.surv$days_to_death)
dat.CNlnc.surv$days_to_last_followup[is.na(dat.CNlnc.surv$days_to_last_followup)]<-dat.CNlnc.surv$days_to_death[is.na(dat.CNlnc.surv$days_to_last_followup)]
dat.CNlnc.surv$days_to_death
dat.CNlnc.surv$days_to_death<-!is.na(dat.CNlnc.surv$days_to_death)
colnames(dat.CNlnc.surv)[c(1,2)]<-c('Survival','event')
for( i in 3:dim(dat.CNlnc.surv)[2]){
cox.p[i] <- summary(coxph(Surv(time = Survival, event = event) ~ dat.CNlnc.surv[,i], data = dat.CNlnc.surv))$coefficient[5]
print(i/dim(dat.CNlnc.surv)[2])
}
cox.p
dat.CNlnc.surv.sig <- dat.CNlnc.surv[,c(1,2,which(cox.p<0.05))]
View(dat.CNlnc.surv.sig)
which(cox.p<0.05))
which(cox.p<0.05)
cox.p[which(cox.p<0.05)]
cox.p[which(cox.p<0.001)]
CNlnc.surv.cox <- summary(coxph(Surv(time = survival, event = status) ~ ., data = dat.CNlnc.surv.sig))
CNlnc.surv.cox <- summary(coxph(Surv(time = Survival, event = event) ~ ., data = dat.CNlnc.surv.sig))
summary(coxph(Surv(time = Survival, event = event) ~ ., data = dat.CNlnc.surv.sig))
CNlnc.surv.cox
CNlnc.surv.cox$coefficients
CNlnc.surv.cox$coefficients[5]
CNlnc.surv.cox$coefficients[,55]
CNlnc.surv.cox$coefficients[,5]
adc.cox.probe <- match(row.names(CNlnc.surv.cox$coefficients)[which(CNlnc.surv.cox$coefficient[,5] < 0.01)],colnames(dat.CNlnc.surv))
adc.cox.probe
CNlnc.surv.cox$coefficients[,5]<0.01
sum(CNlnc.surv.cox$coefficients[,5]<0.01)
adc.cox.probe
length(adc.cox.probe)
CNlnc.surv.cox.probe <- match(row.names(CNlnc.surv.cox$coefficients)[which(CNlnc.surv.cox$coefficient[,5] < 0.01)],colnames(dat.CNlnc.surv))
dat.CNlnc.surv.cox<-dat.CNlnc.surv[,c(1,2,CNlnc.surv.cox.probe)]
which(cox.p<0.05)
dat.CNlnc.surv.sig <- dat.CNlnc.surv[,c(1,2,which(cox.p<0.001))]
CNlnc.surv.cox <- summary(coxph(Surv(time = Survival, event = event) ~ ., data = dat.CNlnc.surv.sig))
CNlnc.surv.cox.probe <- match(row.names(CNlnc.surv.cox$coefficients)[which(CNlnc.surv.cox$coefficient[,5] < 0.01)],colnames(dat.CNlnc.surv))
dat.CNlnc.surv.cox<-dat.CNlnc.surv[,c(1,2,CNlnc.surv.cox.probe)]
dat.CNlnc.surv.cox
cox.predict <- predict(coxph(Surv(time = Survival, event = event) ~ ., data = dat.CNlnc.surv.cox), dat.CNlnc.surv.cox)
highrisk.fit <- Surv(time = survival[which(cox.predict < 0 )], event = status[which(cox.predict < 0 )])
lowrisk.fit <- Surv(time = survival[which(cox.predict > 0 )], event = status[which(cox.predict > 0 )])
highrisk.fit <- Surv(time = Survival[which(cox.predict < 0 )], event = event[which(cox.predict < 0 )])
highrisk.fit <- Surv(time = dat.CNlnc.surv.cox$Survival[which(cox.predict < 0 )], event = dat.CNlnc.surv.cox$event[which(cox.predict < 0 )])
lowrisk.fit <- Surv(time = dat.CNlnc.surv.cox$Survival[which(cox.predict > 0 )], event = dat.CNlnc.surv.cox$event[which(cox.predict > 0 )])
plot(survfit(lowrisk.fit~1),col = "red",main = c("Internal Validation"))
lines(survfit(highrisk.fit~1), col = "blue")
legend("topright", col = c("red","blue"),legend = c("high risk", "low risk"),lty = 1)
cox.predict
length(cox.predict)
cox.predict>1
cox.predict>0
factor(cox.predict>0)
dat.CNlnc.surv.cox$risk<-factor(cox.predict>0)
levels(dat.CNlnc.surv.cox$risk)<-c('High','Low')
CNlnc.surv.fit<-survfit(Surv(time = Survival, event = event) ~ risk,data = dat.CNlnc.surv.cox)
library(survival)
source('ggsurv.R')
ggsurv(CNlnc.surv.fit)
ggsurv(CNlnc.surv.fit,xlab = 'Time(day)',main = 'Internal validation')
CNlnc.surv.cox
CNlnc.surv.cox.probe
colnames(dat.CNlnc.surv.cox)[CNlnc.surv.cox.probe]
colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe]
head(dat.CNlnc.surv.cox)
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001',sep='\n')
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n')
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n',colnames=F,quote=F)
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n',header=F,quote=F)
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n',quote=F)
write.table(unlist(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe]),file = 'lncRNA_coxp_0.001.txt',sep='\n',quote=F)
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n',quote=F,col.names = F)
write.table(colnames(dat.CNlnc.surv)[CNlnc.surv.cox.probe],file = 'lncRNA_coxp_0.001.txt',sep='\n',quote=F,col.names = F,row.names=F)
ggsurv(CNlnc.surv.fit,xlab = 'Time(day)',main = 'Internal validation (TCGA)')
png(filename = 'InternalValidate_TCGA.png')
ggsurv(CNlnc.surv.fit,xlab = 'Time(day)',main = 'Internal validation (TCGA)')
dev.off()
rm(list=ls())
dev.off()
setwd('../../../../../Dropbox/NTU HW/Data Mining/FinalProject - Co_authourship/P2_author/')
source('~/Dropbox/NTU HW/Data Mining/FinalProject - Co_authourship/P2_author/Data_categorise.R', echo=TRUE)
head(CN1)
CN1$V4<-factor(CN1$V4)
nchoosek(792918,2)
choose(792918,2)
V4
CN1$V4
CN1$V4<-factor(CN1$V4)
model<-by(CN1,CN1$V3,function(x) table(x$V4)/2)
model_ed<-data.frame(model$'2008',model$'2009',model$'2010',model$'2011',model$'2012')
model_ed<-model_ed[,c(1,2,4,6,8,10)]
colnames(model_ed)<-c('Conference','2008','2009','2010','2011','2012')
model_ed
write.table(model_ed,'CN1_conference_categorize.txt',quote = F,row.names=F,sep='\t')
rm(list=ls())
setwd('../../../../../Github/DifferentialExpressionTools/R scripts/Comparison/')
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/Comparison.R', echo=TRUE)
recursivecomparison(3,3)
print('limma')
if (normalnum!=1 && controlnum!=1){
time_matrix[4,1]<-system.time(output_limma<-limma_pile(count_table,normalnum,controlnum))[3]
output_limma<-as.data.frame(output_limma$p.value[order(output_limma$p.value[,2],decreasing = F),])
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
}else{
print('condition unfit')
}
normalnum=3
controlnum=3
if (normalnum!=1 && controlnum!=1){
time_matrix[4,1]<-system.time(output_limma<-limma_pile(count_table,normalnum,controlnum))[3]
output_limma<-as.data.frame(output_limma$p.value[order(output_limma$p.value[,2],decreasing = F),])
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
}else{
print('condition unfit')
}
count_table<-counttable_merged('../../Normal distributed case/')
AnswerDE<-read.csv('../../Normal distributed case/allDElist.csv')
savetohere<-function(data,filename){
path<-paste0('../../Normal distributed case/',filename)
write.table(data,path)
}
if (normalnum!=1 && controlnum!=1){
time_matrix[4,1]<-system.time(output_limma<-limma_pile(count_table,normalnum,controlnum))[3]
output_limma<-as.data.frame(output_limma$p.value[order(output_limma$p.value[,2],decreasing = F),])
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
}else{
print('condition unfit')
}
time_matrix<-matrix(nrow = 4,ncol = 1)
print('limma')
if (normalnum!=1 && controlnum!=1){
time_matrix[4,1]<-system.time(output_limma<-limma_pile(count_table,normalnum,controlnum))[3]
output_limma<-as.data.frame(output_limma$p.value[order(output_limma$p.value[,2],decreasing = F),])
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
}else{
print('condition unfit')
}
??grid.newpag
library(grid)
source('~/.active-rstudio-document', echo=TRUE)
recursivecomparison(3,3)
