allcorr<-sapply(training,function(x) cor(as.numeric(x),as.numeric(training$classe)))
allcorr>0.3
sum(allcorr>0.3)
sum(allcorr>0.3,rm.na=1)
sum(allcorr>0.3,na.rm = 1)
good_cor<-allcorr>0.3
allcorr<-0.3
allcorr<-sapply(training,function(x) cor(as.numeric(x),as.numeric(training$classe)))
allcorr<(-0.3)
sum(allcorr<(-0.3),na.rm = 1)
names(training)[good_cor]
good_cor
!is.na(good_cor)
good_cor
Modelfit<-train(classe~pitch_forearm,method='lm',data=training)
Modelfit<-train(as.numeric(classe)~pitch_forearm,method='lm',data=training)
prediction<-predict(Modelfit,newdata = testing)
prediction
confusionMatrix(prediction,training$classe)
confusionMatrix(prediction,as.numerictraining$classe)
confusionMatrix(prediction,as.numeric(training$classe))
confusionMatrix(prediction,as.numeric(testing$classe))
confusionMatrix(prediction,testing$classe)
Modelfit<-train(classe~pitch_forearm,method='rpart',data=training)
prediction<-predict(Modelfit,newdata = testing)
confusionMatrix(prediction,testing$classe)
prediction
testing$classe
names(test)
names(testing)
names(training)[good_cor]
names(training)[good_cor][1]
names(training)[good_cor][2]
names(training)[!is.na(names(training)[good_cor])]
set.seed(12345)
dim(testing)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(prediction)
prediction
source("http://bioconductor.org/biocLite.R")
biocLite("BitSeq")
biocLite("DEGseq")
getwd()
read.csv('getdata-data-ss06hid.csv')
t<-read.csv('getdata-data-ss06hid.csv')
names(t)
strplit(names(t))
strsplit(names(t))
strsplit(names(t)split = 'wgtp')
strsplit(names(t),split = 'wgtp')
s<-read.csv('getdata-data-GDP.csv')
s$GDP
gsub(levels(s$GDP))
gsub(levels(s$GDP),',')
?gsub
gsub(levels(s$GDP),',','')
gsub(',','',levels(s$GDP),)
levels(s$GDP)<-gsub(',','',levels(s$GDP))
mean(as.numeric(as.character(s$GDP)))
names(s)
s$Country
s$Economy
as.character(s$Economy)
grep("^United",as.character(s$Economy))
as.character(s$Economy)
country_name<-as.character(s$Economy)
grep("^United*",country_name
)
country_name[99]
u<-read.csv('getdata-data-EDSTATS_Country.csv')
head(u)
merge(u,s,by.x='CountryCode',by.y=Country)
merge(u,s,by.x='CountryCode',by.y='Country')
merged<-merge(u,s,by.x='CountryCode',by.y='Country')
names(merged)
head(merged)
merged$Special.Notes
as.character(merged$Special.Notes)
special_notes<-as.character(merged$Special.Notes)
grep("^Fiscal year end",special_notes)
special_notes[grep("^Fiscal year end",special_notes)]
special_notes<-special_notes[grep("^Fiscal year end",special_notes)]
strsplit('Fiscal year end: ',special_notes)
strsplit(special_notes,'Fiscal year end: ')
sapply(strsplit(special_notes,'Fiscal year end: '),'[[')[2]
sapply(strsplit(special_notes,'Fiscal year end: '),'[['[2])
sapply(strsplit(special_notes,'Fiscal year end: '),'[[')
?'[['
sapply(strsplit(special_notes,'Fiscal year end: '),function(x) '[['[2])
sapply(strsplit(special_notes,'Fiscal year end: '),function(x) '[['[1])
sapply(strsplit(special_notes,'Fiscal year end: '),function(x) [[x]][2])
sapply(strsplit(special_notes,'Fiscal year end: ')
)
gsub('Fiscal year end: ','',special_notes)
special_notes<-gsub('Fiscal year end: ','',special_notes)
strsplit(' ',special_notes)
strsplit(special_notes,' ')
strsplit(special_notes,' ')[1]
strsplit(special_notes,' ')[1][1]
strsplit(special_notes,' ')[[1]]
strsplit(special_notes,' ')[[1]][1]
sapply(strsplit(special_notes,' '),'[[')
sapply(strsplit(special_notes,' '),FUN = '[[')
sapply(strsplit(special_notes,' '),print)
temp<-strsplit(special_notes,' ')
sapply(temp,'[[')
sapply(temp,print)
special_notes
grep('^June',special_notes)
sum(grep('^June',special_notes))
length(grep('^June',special_notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
substr(sampleTimes,0,4)
year<-substr(sampleTimes,0,4)
sampleTimes
class(sampleTimes)
?Date
?weekdays
weekdays(sampleTimes)
weekdays(sampleTimes)=='Monday'
year=='2012'
year[year=='2012']
weekdays(sampleTimes[year=='2012'])
weekdays(sampleTimes[year=='2012'])=='Monday'
sum(weekdays(sampleTimes[year=='2012'])=='Monday')
special_notes
strsplit(special_notes,' ')
sapply(strsplit(special_notes,' '),function(x){x[1]})
?gsub
str_t
library(stringr)
str_trim(special_notes)
data(spam)
library(krenlab)
library(kernlab)
install.packages('kernlab')
library
library
library(kernlab)
data(spam)
30*.75
70*.47
x*.75+(1-x)*.47=30
x*.75+(1-x)*.47=30
0.47-0.28*x=0.3
x<-read.csv('../DifferentialExpressionTools/Random2/profiled_A1.pro')
head(x)
x<-read.table('../DifferentialExpressionTools/Random2/profiled_A1.pro',sep='\t')
head(x)
sum(x[,6])
str(x)
sum(as.numeric(x[,6]))
read.csv('../DifferentialExpressionTools/count_table_merged.csv')
library(DESeq)
read.csv('../DifferentialExpressionTools/RealDataset/final.csv')
str(x)
x<-read.csv('../DifferentialExpressionTools/count_table_merged.csv')
mean(x[,-1])
head(x)
colMeans(x)
colMeans(x[,-1])
hist(x[,2])
hist(x[,2],40)
hist(log(x[,2]),40)
hist(log(x[,3]),40)
require(ggplot2)
states = c("alabama","arizona","arkansas","california",
"colorado","connecticut","delaware","district of columbia",
"florida","georgia","idaho","illinois",
"indiana","iowa","kansas","kentucky",
"louisiana","maine","maryland","massachusetts",
"michigan","minnesota","mississippi","missouri",
"montana","nebraska","nevada","new hampshire",
"new jersey","new mexico","new york","north carolina",
"north dakota","ohio","oklahoma","oregon",
"pennsylvania","rhode island","south carolina","south dakota",
"tennessee","texas","utah","vermont",
"virginia","washington","west virginia","wisconsin",
"wyoming")
dataset <- data.frame(region=states,val=runif(49, 0,1))
us_state_map <- map_data('state')
map_data <- merge(us_state_map, dataset, by='region', all=T)
map_data <- map_data[order(map_data$order), ]
(qplot(long, lat, data=map_data, geom="polygon", group=group, fill=val)
+ theme_bw() + labs(x="", y="", fill="")
+ scale_fill_gradient(low='#EEEEEE', high='darkgreen')
+ theme(title="I was created using gplot2!",
legend.position="bottom", legend.direction="horizontal"))
head(map_data)
rm(list=la())
rm(list=ls())
library(ggplot2)
map_data()
?map_data()
map_data('state')
map('state')
map('us')
map('usa')
map('france')
map('world')
map('world2')
map.axes()
map.cities()
data(worldMapEnv)
worldMapEnv
data(world.cities)
head(world.cities)
world.cities=='Taiwan'
world.cities[world.cities=='Taiwan']
world.cities[world.cities[,2]=='Taiwan',]
map(world2,regions = 'asia')
map(world,regions = 'asia')
map('world2',regions = 'asia')
world2map<-map_data('world2')
head(world2map)
world2map[[region]]=='Taiwan'
world2map[['region']]=='Taiwan'
world2map[world2map[['region']]=='Taiwan',]
world2map[world2map[['region']]=='China',]
head(world2map)
world2map[world2map[['region']]=='Vatican',]
world2map[world2map[['region']]=='Italy',]
world2map[world2map[['region']]=='Hong kong',]
world2map[world2map[['region']]=='China',]
world2map[world2map[['sub region']]=='Taiwan',]
taiwanmap<-world2map[world2map[['subregion']]=='Taiwan',]
ggplot(taiwanmap)<-geom_polygon()
ggplot(taiwanmap)+geom_polygon()
ggplot(taiwanmap)+geom_polygon(aes(x=long, y=lat, group = group),colour="white", fill="grey10" ))
ggplot(taiwanmap)+geom_polygon(aes(x=long, y=lat, group = group),colour="white", fill="grey10" )
read.table('/Users/NeilWu/Dropbox/Friends/小貓.txt')
read.table('/Users/NeilWu/Dropbox/Friends/小貓.txt',fill = F)
read.table('/Users/NeilWu/Dropbox/Friends/小貓.txt',sep='')
read.table('/Users/NeilWu/Dropbox/Friends/小貓.txt',sep='     TT')
read.table('/Users/NeilWu/Dropbox/Friends/小貓.txt')
0.96^25
library(slidify)
library(devtools)
install_github('slidifyLibraries','ramnathv')
library(slidifyLibraries)
install.packages("rPython", repos = "http://www.datanalytics.com/R")
install.packages("rPython")
?sqrt
21^0.5
1/20
21^0.05
1.21^0.05
1.01^20
6.8*(5^0.5)
6.8/(5^0.5)
dir()
getwd()
grep('.*1024',dir())
dir_list<-dir()
dir_list[grep('.*1024',dir_list]
dir_list[grep('.*1024',dir_list)]
dir_list<-dir_list[grep('.*1024',dir_list)]
dir_list
?apply
HIV<-c(12.0,10.5,13.5,12.5,9.5,6.3,7.2)
mean(HIV)
median(H)
median(HIV)
sd(HIV)
setwd('../DifferentialExpressionTools/R scripts/Comparison/')
source('~/.active-rstudio-document', echo=TRUE)
View(Finalmatrix)
matrix_filledin<-function(matrix,row,TP,FP,CP=CP,CN=CN){
matrix[1,row]<-TP/CP
matrix[2,row]<-(CN-FP)/CN
matrix[3,row]<-TP/(TP+FP)
matrix[4,row]<-(TP+(CN-FP))/(CP+CN)
return(matrix)
}
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,1,DEGTP,DEGTN,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,2,DETP,DETN,CP,CN)
edgeTP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
edgeFP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,3,edgeTP,edgeTN,CP,CN)
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,4,limmaTP,limmaTN,CP,CN)
write.table(Finalmatrix,'../../Normal distributed case/Final_table.txt')
View(Finalmatrix)
View(output_DESeq)
count_table<-counttable_merged('../../Normal distributed case/')
AnswerDE<-read.csv('../../Normal distributed case/allDElist.csv')
AnswerDE<-AnswerDE[!is.na(AnswerDE$DE),]
CP<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
CN<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7] )
##Set final matrix
Finalmatrix<-matrix(nrow = 4,ncol = 4)
rownames(Finalmatrix)<-c('Sensitivity','Specificity','Precision','Accuracy')
colnames(Finalmatrix)<-c('DEGseq','DESeq','edgeR','limma')
matrix_filledin<-function(matrix,row,TP,FP,CP=CP,CN=CN){
matrix[1,row]<-TP/CP
matrix[2,row]<-(CN-FP)/CN
matrix[3,row]<-TP/(TP+FP)
matrix[4,row]<-(TP+(CN-FP))/(CP+CN)
return(matrix)
}
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,1,DEGTP,DEGTN,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,2,DETP,DETN,CP,CN)
edgeTP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
edgeFP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,3,edgeTP,edgeTN,CP,CN)
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
Finalmatrix<-matrix_filledin(Finalmatrix,4,limmaTP,limmaTN,CP,CN)
write.table(Finalmatrix,'../../Normal distributed case/Final_table.txt')
View(Finalmatrix)
savetohere<-function(data,filename){
path<-paste0('../../Normal distributed case/',filename)
write.table(data,path)
}
generalmatrix<-matrix(nrow = 4,ncol = 4)
rownames(generalmatrix)<-c('Sensitivity','Specificity','Precision','Accuracy')
colnames(generalmatrix)<-c('DEGseq','DESeq','edgeR','limma')
matrix_filledin<-function(matrix,row,TP,FP,CP=CP,CN=CN){
matrix[1,row]<-TP/CP
matrix[2,row]<-(CN-FP)/CN
matrix[3,row]<-TP/(TP+FP)
matrix[4,row]<-(TP+(CN-FP))/(CP+CN)
return(matrix)
}
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGTN,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
generalmatrix<-matrix_filledin(Finalmatrix,2,DETP,DETN,CP,CN)
edgeTP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
edgeFP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==7 ])
generalmatrix<-matrix_filledin(generalmatrix,3,edgeTP,edgeTN,CP,CN)
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=7 ])
generalmatrix<-matrix_filledin(generalmatrix,4,limmaTP,limmaTN,CP,CN)
savetohere(generalmatrix,'summary_all.txt')
AnswerDE
levels(AnswerDE)
levels(AnswerDE$DE)
levels(AnswerDE$DE)<-c('highDE','highDE','lowDE','lowDE','midDE','midDE','unDE')
levels(AnswerDE$DE)
AnswerDE
table(AnswerDE$DE)
CP<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
CN<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4] )
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGTN,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(Finalmatrix,2,DETP,DETN,CP,CN)
edgeTP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
edgeFP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,3,edgeTP,edgeTN,CP,CN)
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,4,limmaTP,limmaTN,CP,CN)
savetohere(generalmatrix,'summary_all.txt')
View(generalmatrix)
AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ]
AnswerDE[ as.numeric(AnswerDE$DE)!=4, ]
rm(list=ls(pattern = '[PN]$'))
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGTN,CP,CN)
CN<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4] )
##Set final matrix
CP<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGTN,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGFP,CP,CN)
DETP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEFP<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(Finalmatrix,2,DETP,DEFP,CP,CN)
edgeTP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
edgeFP<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,3,edgeTP,edgeFP,CP,CN)
limmaTP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
limmaFP<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,4,limmaTP,limmaFP,CP,CN)
View(generalmatrix)
savetohere(generalmatrix,'summary_all.txt')
DE_based_matrix<-matrix(nrow = 3,ncol = 4)
rownames(generalmatrix)<-c('highDE','midDE','lowDE')
DE_based_matrix<-matrix(nrow = 3,ncol = 4)
rownames(generalmatrix)<-c('highDE','midDE','lowDE')
View(DE_based_matrix)
colnames(generalmatrix)<-c('DEGseq','DESeq','edgeR','limma')
rownames(DE_based_matrix)
View(DE_based_matrix)
for(i in seq(1,3)){
DE_based_matrix[i,1]<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=i ])
}
View(DE_based_matrix)
View(generalmatrix)
sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=1 ])
for(i in seq(1,3)){
DE_based_matrix[i,1]<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])
}
View(DE_based_matrix)
mean(DE_based_matrix[,1])
for(i in seq(1,3)){
DE_based_matrix[i,1]<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])
DE_based_matrix[i,2]<-sum(sig_DEseq$id %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])
DE_based_matrix[i,3]<-sum(row.names(sig_edgeR) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])
DE_based_matrix[i,4]<-sum(row.names(sig_limma) %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])/length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==i ])
}
rm(list=ls(pattern = '[PN]$'))
rm(Finalmatrix)
View(DE_based_matrix)
savetohere(DE_based_matrix,'summary_DEbase.txt')
?cut2
??cut2
sig_DEseq
library(Hmisc)
cut2(sig_DEseq,pval,g=3)
cut2(sig_DEseq,sig_DEseq$pval,g=3)
cut2(sig_DEseq$pval,g=3)
dim(count_table)
dim(count_table)[2]
dim(count_table)[2]+seq(1,4)
source('DEseq.R')
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/DEseq.R', echo=TRUE)
output_DESeq<-DESeq_pile(count_table,normal = 5,control = 5)
dim(count_table)[2]+seq(1,5)
dim(count_table)[2]/2+seq(1,control)
dim(count_table)[2]/2+seq(1,5)
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/DEseq.R', echo=TRUE)
output_DESeq<-DESeq_pile(count_table,normal = 5,control = 5)
output_DESeq<-DESeq_pile(count_table,normal = 2,control = 3)
sig_DEseq<-output_DESeq[ output_DESeq$pval<0.05, ]
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/edgeR.R', echo=TRUE)
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/limma.R', echo=TRUE)
output_limma<-limma_pile(count_table,normal = 3,control = 2)
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
output_limma<-limma_pile(count_table,normal = 3,control = 2)
output_limma<-as.data.frame(output_limma$p.value[order(output_limma$p.value[,2],decreasing = F),])
sig_limma<-output_limma[ output_limma$groupB<0.05, ]
output_edgeR<-edgeR_pile(count_table,normal = 1,control = 2)
output_edgeR<-output_edgeR$table[order(output_edgeR$table$PValue,decreasing = F),]
sig_edgeR<-output_edgeR[ output_edgeR$PValue<0.05, ]
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/DEGseq.R', echo=TRUE)
output_DEGseq<-DEGseq_pipe(count_table,normal = 3,control = 2)
normal=2;control=3
library(DEGseq)
count_table<-count_table[,c(seq(1,normal),(dim(count_table)[2]/2)+seq(1,control))]
write.table(data.frame(row.names(count_table),count_table),'count_table.txt',quote = F,sep='\t',row.names=F,col.names = F)
geneMatrix1<-readGeneExp(file='count_table.txt', geneCol=1, valCol=c(1+seq(1,normal)),header = F,sep = '\t')
geneMatrix2<-readGeneExp(file='count_table.txt', geneCol=1, valCol=c(1+normal+seq(1,control)),header = F,sep = '\t')
DEGexp(geneExpMatrix1=geneMatrix1, geneCol1=1, expCol1=c(1+seq(1,normal)), groupLabel1="A",geneExpMatrix2=geneMatrix2, geneCol2=1, expCol2=c(1+normal+seq(1,control)), groupLabel2="B",method="MARS",outputDir = '.',pValue = 0.05)
normal=2;control=2
count_table<-count_table[,c(seq(1,normal),(dim(count_table)[2]/2)+seq(1,control))]
head(count_table)
write.table(data.frame(row.names(count_table),count_table),'count_table.txt',quote = F,sep='\t',row.names=F,col.names = F)
c(1+seq(1,normal))
c(1+normal+seq(1,control))
geneMatrix1<-readGeneExp(file='count_table.txt', geneCol=1, valCol=c(1+seq(1,normal)),header = F,sep = '\t')
geneMatrix2<-readGeneExp(file='count_table.txt', geneCol=1, valCol=c(1+normal+seq(1,control)),header = F,sep = '\t')
DEGexp(geneExpMatrix1=geneMatrix1, geneCol1=1, expCol1=c(1+seq(1,normal)), groupLabel1="A",geneExpMatrix2=geneMatrix2, geneCol2=1, expCol2=c(1+normal+seq(1,control)), groupLabel2="B",method="MARS",outputDir = '.',pValue = 0.05)
c(1+seq(1,control))
DEGexp(geneExpMatrix1=geneMatrix1, geneCol1=1, expCol1=c(1+seq(1,normal)), groupLabel1="A",geneExpMatrix2=geneMatrix2, geneCol2=1, expCol2=c(1+seq(1,control)), groupLabel2="B",method="MARS",outputDir = '.',pValue = 0.05)
system('rm -r output/ output.html count_table.txt')
DEGseq_out<-read.table('output_score.txt',header = T)
system('rm -r output_score.txt')
source('~/Github/DifferentialExpressionTools/R scripts/Comparison/DEGseq.R', echo=TRUE)
output_DEGseq<-DEGseq_pipe(count_table,normal = 2,control = 3)
count_table<-counttable_merged('../../Normal distributed case/')
output_DEGseq<-DEGseq_pipe(count_table,normal = 2,control = 3)
sig_DEGseq<-output_DEGseq[ output_DEGseq$p.value<0.05 & !is.na(output_DEGseq$p.value) , ]
output_DEGseq<-DEGseq_pipe(count_table,normal = 1,control = 1)
sig_DEGseq<-output_DEGseq[ output_DEGseq$p.value<0.05 & !is.na(output_DEGseq$p.value) , ]
DEGTP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ])
DEGFP<-sum(sig_DEGseq$GeneNames %in% AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ])
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGFP,CP,CN)
CP<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)!=4 ] )
CN<-length(AnswerDE$gene_name[ as.numeric(AnswerDE$DE)==4 ] )
generalmatrix<-matrix_filledin(generalmatrix,1,DEGTP,DEGFP,CP,CN)
View(generalmatrix)
CD <- new("countData", data = as.matrix(count_table), replicates = colnames(count_table), groups = list(NDE=c(rep(1,2*replicates)),DE=c(rep(1,replicates),rep(2,replicates))))
replicates=length(colnames(count_table))/2
CD <- new("countData", data = as.matrix(count_table), replicates = colnames(count_table), groups = list(NDE=c(rep(1,2*replicates)),DE=c(rep(1,replicates),rep(2,replicates))))
?new
source('~/.active-rstudio-document', echo=TRUE)
output_baySeq<-baySeq_pipe(count_table,normal = 5,control = 5)
output_baySeq<-baySeq_pipe(count_table,normal = 2,control = 2)
View(output_baySeq)
View(generalmatrix)
output_edgeR<-edgeR_pile(count_table,normal = 1,control = 1)
